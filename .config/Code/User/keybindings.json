[
    {
        "key": "ctrl+0",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+shift+a",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+k ctrl+shift+d",
        "command": "workbench.view.extension.dockerView"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    {
        "key": "ctrl+alt+j",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+alt+s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+k s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+k s",
        "command": "workbench.files.action.saveAllInGroup"
    },
    {
        "key": "ctrl+k shift+s",
        "command": "workbench.action.files.saveFiles"
    },
    {
        "key": "shift+tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+`",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "pagedown",
        "command": "-selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "down",
        "command": "-workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "shift+`",
        "command": "workbench.action.terminal.selectNextPageSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "pagedown",
        "command": "-workbench.action.terminal.selectNextPageSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "pageup",
        "command": "-selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+pageup",
        "command": "-selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.terminal.selectPrevSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "-workbench.action.terminal.selectPrevSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "ctrl+shift+`",
        "command": "workbench.action.terminal.selectPrevPageSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "pageup",
        "command": "-workbench.action.terminal.selectPrevPageSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "ctrl+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+=",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+alt+t",
        "command": "workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+alt+=",
        "command": "workbench.action.createTerminalEditor"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.focusAuxiliaryBar"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+alt+m",
        "command": "workbench.action.evenEditorWidths"
    },
    {
        "key": "ctrl+k ctrl+shift+i",
        "command": "workbench.action.terminal.rename"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "workbench.action.terminal.changeColor"
    },
    {
        "key": "ctrl+alt+;",
        "command": "editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "shift+f10",
        "command": "-editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+r",
        "command": "editor.action.resetSuggestSize"
    },
    {
        "key": "shift+enter",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
    },
    {
        "key": "shift+tab",
        "command": "-jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.focusOtherSideEditor"
    },
    {
        "key": "ctrl+k ctrl+shift+l",
        "command": "workbench.action.terminal.changeIcon"
    },
    {
        "key": "ctrl+k l",
        "command": "workbench.action.toggleEditorGroupLock"
    },
    {
        "key": "ctrl+k 3",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+k q",
        "command": "workbench.action.closeEditorsToTheLeft"
    },
    {
        "key": "ctrl+k e",
        "command": "workbench.action.closeEditorsToTheRight"
    },
    {
        "key": "alt+-",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "ctrl+k f2",
        "command": "-togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "alt+.",
        "command": "merge-conflict.next"
    },
    {
        "key": "alt+,",
        "command": "merge-conflict.previous"
    },
    {
        "key": "shift+alt+delete",
        "command": "workbench.action.files.revert"
    },
    {
        "key": "alt+d",
        "command": "git.openChange"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus"
    },
    {
        "key": "f10",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "filesExplorerFocus"
    },
    {
        "key": "shift+alt+\\",
        "command": "workbench.action.navigateForwardInEditLocations"
    },
    {
        "key": "alt+backspace",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "alt+\\",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "workbench.action.localHistory.create"
    },
    {
        "key": "ctrl+k alt+h",
        "command": "workbench.action.localHistory.deleteAll"
    },
    {
        "key": "ctrl+k h",
        "command": "workbench.action.localHistory.restoreViaPicker"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-workbench.action.joinEditorInGroup",
        "when": "sideBySideEditorActive"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.toggleSplitEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+shift+o",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "ctrl+alt+=",
        "command": "workbench.action.terminal.newWithProfile"
    },
    {
        "key": "ctrl+shift+alt+\\",
        "command": "editor.action.selectToBracket"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeEditorsAndGroup"
    },
    {
        "key": "shift+down",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+up",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+k c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+k c",
        "command": "workbench.action.toggleCenteredLayout"
    },
    {
        "key": "ctrl+k ctrl+space",
        "command": "editor.action.insertSnippet"
    },
    {
        "key": "enter",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "alt+enter",
        "command": "type",
        "args": {
            "text": "\n"
        },
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "tab",
        "command": "-jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+k ctrl+enter",
        "command": "workbench.action.keepEditor"
    },
    {
        "key": "ctrl+k enter",
        "command": "-workbench.action.keepEditor"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.terminal.clear"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    },

    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.terminal.runRecentCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+k alt+q",
        "command": "rewrap.toggleAutoWrap"
    },
    {
        "key": "shift+alt+q",
        "command": "rewrap.rewrapCommentAt"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+alt+k",
        "command": "editor.action.joinLines"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.switchWindow"
    },
    {
        "key": "ctrl+shift+alt+v",
        "command": "editor.action.toggleStickyScroll"
    },

    {
        "key": "ctrl+r",
        "command": "workbench.action.terminal.runRecentCommand",
        "when": "terminalProcessSupported && !terminalFocus && editorLangId != 'rmd'"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.terminal.runRecentCommand",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+.",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+alt+.",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+alt+,",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+f3",
        "command": "-editor.action.dirtydiff.previous",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+.",
        "command": "editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "f7",
        "command": "-editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+,",
        "command": "editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+f7",
        "command": "-editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "alt+.",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+shift+f",
        "command": "search.action.openNewEditor"
    },
    {
        "key": "alt+;",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+'",
        "command": "editor.action.focusStickyScroll"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+alt+b",
        "command": "workbench.action.toggleStatusbarVisibility"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+k enter",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k enter",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "f8",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+f8",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+f9",
        "command": "editor.debug.action.goToNextBreakpoint"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "editor.debug.action.goToPreviousBreakpoint"
    },
    {
        "key": "ctrl+k \\",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "shift+alt+end",
        "command": "deleteAllRight"
    },
    {
        "key": "shift+alt+home",
        "command": "deleteAllLeft"
    },
    {
        "key": "shift+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "shift+delete",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+backspace",
        "command": "-deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+alt+f",
        "command": "search.action.openNewEditorToSide"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorUp"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+k alt+f12",
        "command": "editor.action.goToTypeDefinition"
    },
    {
        "key": "alt+f12",
        "command": "editor.action.peekTypeDefinition"
    },
    {
        "key": "ctrl+; ctrl+f12",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k shift+f12",
        "command": "editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+f10",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+f12",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "-editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "editor.action.referenceSearch.trigger"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "breadcrumbs.toggle"
    },
    {
        "key": "ctrl+k ctrl+shift+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "editor.action.peekDeclaration"
    },
    {
        "key": "ctrl+k ctrl+shift+f12",
        "command": "editor.action.revealDeclaration"
    },
    {
        "key": "shift+enter",
        "command": "extension.jumpy-word",
        "when": "editorFocus && !findInputFocussed && !inSnippetMode && !renameInputVisible"
    },
    {
        "key": "shift+alt+enter",
        "command": "extension.jumpy-line",
        "when": "editorFocus && !findInputFocussed && !inSnippetMode"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "center-editor-window.center",
        "when": "editorTextFocus || findWidgetVisible"
    },
    {
        "key": "ctrl+l",
        "command": "-center-editor-window.center",
        "when": "editorTextFocus || findWidgetVisible"
    },
    {
        "key": "alt+b",
        "command": "editor.action.showOrFocusStandaloneColorPicker"
    },
    {
        "key": "ctrl+k r",
        "command": "-workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "ctrl+k r",
        "command": "workbench.action.files.toggleActiveEditorReadonlyInSession"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.files.openFile",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "accessibilityModeEnabled && terminalFocus"
    },
    {
        "key": "ctrl+shift+alt+o",
        "command": "revealFileInOS"
    },
    {
        "key": "shift+alt+b",
        "command": "editor.action.sortLinesAscending"
    },
    {
        "key": "shift+alt+y",
        "command": "editor.action.sortLinesDescending"
    },
    {
        "key": "ctrl+k f12",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k home",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+up",
        "command": "cursorMove",
        "args": {
            "to": "prevBlankLine",
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+up",
        "command": "cursorMove",
        "args": {
            "to": "prevBlankLine",
            "select": true
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "cursorMove",
        "args": {
            "to": "nextBlankLine",
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+down",
        "command": "cursorMove",
        "args": {
            "to": "nextBlankLine",
            "select": true
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "editor.gotoPreviousFold",
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "editor.gotoNextFold"
    },
    {
        "key": "ctrl+alt+/",
        "command": "editor.gotoParentFold"
    },
    {
        "key": "ctrl+k ctrl+f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "editor.action.formatChanges"
    },
    {
        "key": "shift+alt+backspace",
        "command": "workbench.action.navigateBackInEditLocations"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+down",
        "command": "-workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+up",
        "command": "-workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+shift+v",
        "command": "editor.action.pasteAs",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+-",
        "command": "diffEditor.switchSide",
        "when": "inDiffEditor"
    },
    {
        "key": "ctrl+shift+'",
        "command": "workbench.action.terminal.copyLastCommandOutput",
        "when": "terminalFocus"
    },
    {
        "key": "escape",
        "command": "extension.jumpy-exit",
        "when": "editorTextFocus && jumpy.isJumpyMode"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "-chat.action.askQuickQuestion",
        "when": "hasChatProvider"
    },
    {
        "key": "ctrl+alt+x",
        "command": "runCommands",
        "args": {
            "commands": [
                "cursorHome",
                "cursorLineEndSelect",
                "editor.action.clipboardCutAction",
                "deleteAllLeft"
            ]
        }
    },
    {
        "key": "ctrl+alt+c",
        "command": "runCommands",
        "args": {
            "commands": [
                "cursorHome",
                "cursorLineEndSelect",
                "editor.action.clipboardCopyAction",
                "cursorUndo",
                "cursorUndo"
            ]
        }
    },
    {
        "key": "alt+e",
        "command": "cursorMove",
        "args": {
            "to": "viewPortCenter"
        }
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.view.extension.todo-tree-container",
        "when": "!terminalFocus"
    },
    {
        "key": "shift+alt+c",
        "command": "todo-tree.refresh"
    },
    {
        "key": "ctrl+k shift+c",
        "command": "todo-tree.filter"
    },
    {
        "key": "ctrl+k alt+c",
        "command": "todo-tree.resetAllFilters"
    },
    {
        "key": "ctrl+alt+shift+left",
        "command": "cursorWordPartLeftSelect",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+shift+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "workbench.view.remote"
    },
    {
        "key": "alt+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "shift+alt+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "ctrl+shift+alt+u",
        "command": "editor.action.transformToTitlecase"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus"
    },
    {
        "key": "ctrl+k ctrl+v",
        "command": "markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k ctrl+shift+=",
        "command": "workbench.action.terminal.newLocal"
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+k ctrl+shift+b",
        "command": "workbench.action.tasks.reRunTask",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "ctrl+k ctrl+shift+g",
        "command": "workbench.action.terminal.moveToEditor"
    },
    {
        "key": "ctrl+k ctrl+shift+h",
        "command": "workbench.action.terminal.moveToTerminalPanel"
    },
    {
        "key": "ctrl+k i",
        "command": "-inlineChat.start",
        "when": "inlineChatHasProvider && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+shift+e",
        "command": "references-view.tree.focus"
    },
    {
        "key": "ctrl+alt+0",
        "command": "workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "shift+alt+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "shift+alt+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.terminal.focusTabs",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "-workbench.action.terminal.focusTabs",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.splitActiveTab",
        "when": "terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+k alt+l",
        "command": "markdown.preview.toggleLock"
    },
    {
        "key": "ctrl+alt+v",
        "command": "workbench.action.hideEditorTabs"
    },
    {
        "key": "ctrl+k ctrl+alt+v",
        "command": "workbench.action.showMultipleEditorTabs"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.minimizeOtherEditors"
    },
    {
        "key": "ctrl+k alt+f",
        "command": "hexEditor.openFile"
    },
    {
        "key": "alt+f9",
        "command": "-editor.action.nextCommentThreadAction"
    },
    {
        "key": "alt+f9",
        "command": "editor.debug.action.conditionalBreakpoint"
    },
    {
        "key": "ctrl+alt+n",
        "command": "workbench.action.newEmptyEditorWindow"
    },
    {
        "key": "ctrl+k alt+right",
        "command": "workbench.action.moveEditorGroupToNewWindow"
    },
    {
        "key": "ctrl+k ctrl+alt+right",
        "command": "workbench.action.moveEditorToNewWindow"
    },
    {
        "key": "ctrl+k ctrl+alt+\\",
        "command": "workbench.action.copyEditorToNewWindow"
    },
    {
        "key": "ctrl+k alt+\\",
        "command": "workbench.action.copyEditorGroupToNewWindow"
    },
    {
        "key": "ctrl+k space",
        "command": "editor.action.surroundWithSnippet"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.debug.panel.action.clearReplAction",
        "when": "inDebugRepl"
    },
    {
        "key": "alt+k",
        "command": "workbench.debug.panel.action.clearReplAction",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+shift+k",
        "command": "todo-tree.collapse",
        "when": "todo-tree-view.active && !editorFocus && !terminalFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "todo-tree.expand",
        "when": "todo-tree-view.active && !editorFocus && !terminalFocus"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.action.tasks.test"
    },
    {
        "key": "ctrl+alt+g",
        "command": "workbench.action.showEditorTab"
    },
    {
        "key": "ctrl+shift+6",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "shift+alt+p",
        "command": "workbench.action.experimental.quickTextSearch"
    },
    {
        "key": "ctrl+shift+alt+enter",
        "command": "workbench.action.focusLastEditorGroup"
    }
]
// {
//     "key": "ctrl+alt+b",
//     "command": "-r.runFromBeginningToLine",
//     "when": "editorTextFocus && editorLangId == 'r'"
// },    // {
//     "key": "ctrl+shift+v",
//     "command": "-r.rmarkdown.showPreview",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },    // {
//     "key": "ctrl+shift+alt+k",
//     "command": "r.knitRmd",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+shift+k",
//     "command": "-r.knitRmd",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+shift+v",
//     "command": "r.rmarkdown.preview.refresh",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+alt+r",
//     "command": "r.runAllChunks",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+r",
//     "command": "r.runCurrentChunk",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+shift+enter",
//     "command": "-r.runCurrentChunk",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+shift+r",
//     "command": "r.runNextChunk",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+alt+i",
//     "command": "editor.action.insertSnippet",
//     "when": "editorTextFocus && editorLangId == 'rmd'",
//     "args": {
//         "langId": "rmd",
//         "name": "Insert R code chunk"
//     }
// },
// {
//     "key": "ctrl+shift+alt+i",
//     "command": "editor.action.insertSnippet",
//     "when": "editorTextFocus && editorLangId == 'rmd'",
//     "args": {
//         "langId": "rmd",
//         "name": "Insert named R code chunk"
//     }
// },
// {
//     "key": "ctrl+shift+m",
//     "command": "editor.action.insertSnippet",
//     "when": "editorTextFocus && editorLangId == 'rmd'",
//     "args": {
//         "langId": "rmd",
//         "name": "Insert tidyverse pipe"
//     }
// },
// {
//     "key": "ctrl+shift+,",
//     "command": "editor.action.insertSnippet",
//     "when": "editorTextFocus && editorLangId == 'rmd'",
//     "args": {
//         "langId": "rmd",
//         "name": "Insert assignment arrow"
//     }
// },
// {
//     "key": "ctrl+shift+alt+m",
//     "command": "workbench.actions.view.toggleProblems",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+shift+alt+r",
//     "command": "r.runPreviousChunk"
// },
// {
//     "key": "ctrl+alt+n",
//     "command": "r.goToNextChunk"
// },
// {
//     "key": "ctrl+shift+alt+n",
//     "command": "r.goToPreviousChunk"
// },
// {
//     "key": "ctrl+enter",
//     "command": "-r.runSelection",
//     "when": "editorTextFocus && editorLangId == 'r'"
// },
// {
//     "key": "ctrl+enter",
//     "command": "-r.runSelection",
//     "when": "editorTextFocus && editorLangId == 'rmd'"
// },
// {
//     "key": "ctrl+shift+enter",
//     "command": "-r.runSourcewithEcho",
//     "when": "editorTextFocus && editorLangId == 'r'"
// },
